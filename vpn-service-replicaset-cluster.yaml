apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: vpn-service
  labels:
    app: vpn-service
    group: nuodb
    subgroup: cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      group: nuodb
  template:
    metadata:
      labels:
        app: vpn-service
        dns: nuodb-cluster
        group: nuodb
        subgroup: cluster
    spec:
      initContainers:
      - name: ip-forward
        image: busybox:1.28
        command:
          - sh
          - -c
          - sysctl -w net.ipv4.ip_forward="1"
        resources: {}
        securityContext:
          privileged: true
      containers:
      - name: vpn-cluster
        image: nuodb/nuodb-ce:vpn-service-2.2.0
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
        ports:
        - { containerPort: 1194, hostPort: 1194, protocol: TCP }
        - { containerPort: 1194, hostPort: 1194, protocol: UDP }
        resources:
          requests:
            memory: "512Mi"
            cpu: "1"
          limits:
            memory: "2048Mi"
            cpu: "2"        
        envFrom: [ configMapRef: { name: cluster-global }, configMapRef: { name: cluster-config } ]
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - { name: HOSTNAME,                value: "$(POD_NAME)"}
        args: [ "startup" ]
        # livenessProbe:
        #   initialDelaySeconds: 30
        #   periodSeconds: 15
        #   tcpSocket:
        #     port: 1194
        # readinessProbe:
        #   initialDelaySeconds: 30
        #   periodSeconds: 15
        #   exec:
        #     command: [ "nuodocker", "check", "servers" ]
        #   failureThreshold: 30
        #   successThreshold: 2
        #   timeoutSeconds: 1
        volumeMounts:
        - name: log-volume
          mountPath: /var/log/nuodb
      imagePullSecrets:           
      - name: dockerlogin
      volumes:
      - name: log-volume
        emptyDir: {}
